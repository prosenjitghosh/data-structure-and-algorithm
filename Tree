1.Given the root of a binary tree, invert the tree, and return its root
 Example 1:
      2                      2
  /      \      =>         /    \
1          3              3      1

Input: root = [4,2,7,1,3,6,9]
Output: [4,7,2,9,6,3,1]

//Itarative method.
//From top down swap left and right child and befor that 
//store the child in queue 
var invertTree = function(root) {
    if(!root)return root;
    let queue=[root];
    while(queue.length>0){
        let length = queue.length;
        for(let index=0;index<length;index++){
            let current=queue.shift();
            if(current.left)queue.push(current.left);
            if(current.right)queue.push(current.right);
            let temp=current.left;
            current.left=current.right;
            current.right=temp;
        }
    }
    return root;
};

//Recursive method
//Post order left and right child swap bottom up
var invertTree = function(root) {
    if(!root)return root; 
   function invert(current){
       if(!current)return null;
       let left = invert(current.left);
       let right = invert(current.right);
       current.right = left;
       current.left = right;
       return current;
   }
    return invert(root);
    
};

__-____-----_________-------------------------------------------------___________________________________________----------------------------------------_______________________________________________
